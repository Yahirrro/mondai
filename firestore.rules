rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /quiz/{quizId} {
    	allow list;
    	allow read:
      	if resource.data.currentStatus != 'creating'
      		|| request.auth.uid in resource.data.permission.owner;
			allow create:
      	if request.auth != null
        	&& request.auth.uid in request.resource.data.permission.owner;
      allow update: 
      	if (request.auth.uid in resource.data.permission.owner
        	|| request.auth.uid in resource.data.permission.answer)
          	&& request.resource.id == resource.id
      allow delete:
      	if request.auth.uid in resource.data.permission.owner;
      
      function isOwner(userId) {
        return userId in get(/databases/$(database)/documents/quiz/$(quizId)).data.permission.owner
      }
      function getCurrentStatus() {
        return get(/databases/$(database)/documents/quiz/$(quizId)).data.currentStatus
      }
      function existsAnswerUser(userId) {
        return exists(/databases/$(database)/documents/quiz/$(quizId)/participant/$(userId))
      }

      match /question/{questionId} {
      	allow read;
        allow create: if isOwner(request.auth.uid);
        allow update:
        	if isOwner(request.auth.uid)
          	&& request.resource.id == resource.id;
        allow delete: 
        	if isOwner(request.auth.uid);
      }
      match /message/{messageId} {
      	allow read;
        allow create: if isOwner(request.auth.uid);
        allow update:
        	if isOwner(request.auth.uid)
          	&& request.resource.id == resource.id;
        allow delete: 
        	if isOwner(request.auth.uid);
      }
      match /participant/{userId} {
      	allow read: if request.resource.id == request.auth.uid;
        allow create: if getCurrentStatus() == 'open'
        	&& request.auth != null
        	&& request.resource.id == request.auth.uid
        	&& request.resource.data.userId == request.auth.uid;
        allow update, delete: if false;
      }
      match /answer/{answerId} {
      	allow read;
        allow create: if getCurrentStatus() == 'open'
        	&& request.auth != null
          && existsAnswerUser(request.auth.uid)
        	&& request.resource.data.userId == request.auth.uid;
        allow update, delete: if false;
      }
    }
    match /user/{userId} {
    	allow read: if request.auth != null;
      allow create, update: if request.auth != null
      	&& request.resource.data.userId == request.auth.uid
        && request.resource.id == request.auth.uid;
      allow delete: if false;
    }
    match /{path=**}/participant/{userId} {
      allow read: if request.resource.id == request.auth.uid;
    }
  }
}